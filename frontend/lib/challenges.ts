export const challenges = [
  {
    id: 1,
    title: "HTML Page Structure",
    description:
      "Create a basic HTML page with a header, main content, and footer.",
    difficulty: "Easy",
    category: "HTML & CSS",
    completions: 1500,
    estimatedTime: "30 minutes",
    tags: ["html", "structure", "basics"],
    featured: false,
    instructions:
      "\n# Challenge: HTML Page Structure\n\nCreate a basic HTML page with a header, main content, and footer using semantic HTML elements.\n\n## Requirements:\n1. Use semantic HTML elements: <header>, <main>, and <footer>\n2. Add a title in the header - this could be a heading (h1, h2) inside the header element\n3. Add a paragraph in the main section\n4. Add copyright info in the footer\n\n```\n",
    testCases: [
      {
        name: "Header exists",
        description: "The page should have a header element",
      },
      {
        name: "Main exists",
        description: "The page should have a main element",
      },
      {
        name: "Footer exists",
        description: "The page should have a footer element",
      },
      {
        name: "Semantic HTML",
        description: "Semantic tags are used appropriately",
      },
    ],
  },
  {
    id: 2,
    title: "CSS Button Styling",
    description:
      "Style a button with different states: default, hover, and active.",
    difficulty: "Easy",
    category: "HTML & CSS",
    completions: 1200,
    estimatedTime: "45 minutes",
    tags: ["css", "styling", "buttons"],
    featured: false,
    instructions: `\n# Challenge: CSS Button Styling\n\nStyle a button with default, hover, and active states using CSS.\n\n## Requirements:\n1. Create a button element\n2. Style the button for default, hover, and active states\n3. Use CSS classes or inline styles\n`,
    testCases: [
      {
        name: "Button exists",
        description: "The page should have a button element",
      },
      { name: "Hover state", description: "Button has a hover style" },
      { name: "Active state", description: "Button has an active style" },
    ],
  },
  {
    id: 3,
    title: "JavaScript Alert Box",
    description:
      "Write a JavaScript function to show an alert box when a button is clicked.",
    difficulty: "Easy",
    category: "JavaScript",
    completions: 1800,
    estimatedTime: "30 minutes",
    tags: ["javascript", "dom", "events"],
    featured: false,
    instructions: `\n# Challenge: JavaScript Alert Box\n\nShow an alert box when a button is clicked.\n\n## Requirements:\n1. Create an HTML button element using <button> tag\n2. Add a click event listener to the button\n3. Show an alert with a custom message when the button is clicked\n\n## Example solution structure:\n\n\`\`\`html\n<button id="alertButton">Show Alert</button>\n\n<script>\n  document.getElementById("alertButton").addEventListener("click", function() {\n    alert("Hello, world!");\n  });\n</script>\n\`\`\`\n\nReference: Check the complete [example solution](/examples/javascript-alert-box) if you get stuck.\n`,
    testCases: [
      {
        name: "Button exists",
        description: "The page should have a button element",
      },
      {
        name: "Alert on click",
        description: "Clicking the button shows an alert",
      },
    ],
  },
  {
    id: 4,
    title: "Simple Sum Calculator",
    description:
      "Create a JavaScript function that takes two numbers and returns their sum.",
    difficulty: "Easy",
    category: "JavaScript",
    completions: 2000,
    estimatedTime: "30 minutes",
    tags: ["javascript", "functions", "math"],
    featured: true,
    instructions: `\n# Challenge: Simple Sum Calculator\n\nCreate a function that takes two numbers and returns their sum.\n\n## Requirements:\n1. Create an input for two numbers\n2. Add a button to calculate the sum\n3. Display the result\n`,
    testCases: [
      { name: "Inputs exist", description: "There are two number inputs" },
      { name: "Button exists", description: "There is a button to calculate" },
      {
        name: "Sum displayed",
        description: "The sum is displayed after clicking the button",
      },
    ],
  },
  {
    id: 5,
    title: "Responsive Image Gallery",
    description:
      "Create a simple responsive image gallery using HTML and CSS Flexbox.",
    difficulty: "Medium",
    category: "HTML & CSS",
    completions: 900,
    estimatedTime: "1 hour",
    tags: ["html", "css", "flexbox", "responsive"],
    featured: false,
    instructions: `\n# Challenge: Responsive Image Gallery\n\nCreate a responsive image gallery using Flexbox.\n\n## Requirements:\n1. Add at least 4 images\n2. Use Flexbox for layout\n3. Make it responsive for mobile and desktop\n`,
    testCases: [
      { name: "Images exist", description: "At least 4 images are present" },
      { name: "Flexbox used", description: "Flexbox is used for layout" },
      { name: "Responsive", description: "Gallery is responsive" },
    ],
  },
  {
    id: 6,
    title: "Toggle Content Visibility",
    description:
      "Use JavaScript to show/hide content when a button is clicked.",
    difficulty: "Easy",
    category: "JavaScript",
    completions: 1600,
    estimatedTime: "45 minutes",
    tags: ["javascript", "dom", "toggle"],
    featured: false,
    instructions: `\n# Challenge: Toggle Content Visibility\n\nShow or hide content with a button click using JavaScript.\n\n## Requirements:\n1. Add a button\n2. Add a content section\n3. Toggle visibility of content on button click\n`,
    testCases: [
      {
        name: "Button exists",
        description: "There is a button to toggle content",
      },
      {
        name: "Content toggles",
        description: "Content visibility toggles on click",
      },
    ],
  },
  {
    id: 7,
    title: "Basic Form Layout",
    description:
      "Create an HTML form with labels and input fields for name and email.",
    difficulty: "Easy",
    category: "HTML & CSS",
    completions: 1300,
    estimatedTime: "30 minutes",
    tags: ["html", "forms", "layout"],
    featured: false,
    instructions: `\n# Challenge: Basic Form Layout\n\nCreate a form with name and email fields.\n\n## Requirements:\n1. Add a form element\n2. Add labels and inputs for name and email\n3. Add a submit button\n`,
    testCases: [
      { name: "Form exists", description: "There is a form element" },
      { name: "Name input", description: "There is a name input field" },
      { name: "Email input", description: "There is an email input field" },
      { name: "Submit button", description: "There is a submit button" },
    ],
  },
  {
    id: 8,
    title: "Array Element Finder",
    description:
      "Write a JavaScript function to find if an element exists in an array.",
    difficulty: "Easy",
    category: "JavaScript",
    completions: 1700,
    estimatedTime: "45 minutes",
    tags: ["javascript", "arrays", "search"],
    featured: false,
    instructions: `\n# Challenge: Array Element Finder\n\nCheck if an element exists in an array using JavaScript.\n\n## Requirements:\n1. Create an input for array and element\n2. Add a button to check\n3. Display result if element exists\n`,
    testCases: [
      {
        name: "Inputs exist",
        description: "Inputs for array and element exist",
      },
      { name: "Button exists", description: "Button to check exists" },
      {
        name: "Result displayed",
        description: "Result is displayed after checking",
      },
    ],
  },
  {
    id: 9,
    title: "Simple Navbar",
    description: "Create a horizontal navigation bar with HTML and CSS.",
    difficulty: "Medium",
    category: "HTML & CSS",
    completions: 1000,
    estimatedTime: "1 hour",
    tags: ["html", "css", "navigation"],
    featured: true,
    instructions: `\n# Challenge: Simple Navbar\n\nCreate a horizontal navigation bar using HTML and CSS.\n\n## Requirements:\n1. Add a nav element\n2. Add at least 3 links\n3. Style the navbar horizontally\n`,
    testCases: [
      { name: "Nav exists", description: "There is a nav element" },
      { name: "Links exist", description: "At least 3 links are present" },
      {
        name: "Horizontal layout",
        description: "Navbar is styled horizontally",
      },
    ],
  },
  {
    id: 10,
    title: "Character Counter",
    description:
      "Create a textarea that counts the number of characters entered using JavaScript.",
    difficulty: "Medium",
    category: "JavaScript",
    completions: 1100,
    estimatedTime: "1 hour",
    tags: ["javascript", "dom", "textarea", "counter"],
    featured: false,
    instructions: `\n# Challenge: Character Counter\n\nCreate a textarea that counts characters as you type.\n\n## Requirements:\n1. Add a textarea\n2. Show character count below\n3. Update count as user types\n`,
    testCases: [
      { name: "Textarea exists", description: "There is a textarea element" },
      { name: "Count displayed", description: "Character count is displayed" },
      { name: "Count updates", description: "Count updates as user types" },
    ],
  },
  {
    id: 11,
    title: "Sum of Array Elements",
    description:
      "Write a JavaScript function to return the sum of all elements in an array.",
    difficulty: "Easy",
    category: "JavaScript",
    completions: 0,
    estimatedTime: "30 minutes",
    tags: ["javascript", "arrays", "sum"],
    featured: false,
    instructions: `\n# Challenge: Sum of Array Elements\n\nWrite a function that takes an array of numbers and returns their sum.\n\n## Requirements:\n1. Create a function named 'solution' that takes an array of numbers as input\n2. Return the sum of all numbers in the array\n3. Example: solution([1,2,3]) should return 6\n`,
    testCases: [
      { name: "Input exists", description: "There is an input for the array" },
      { name: "Button exists", description: "There is a button to calculate" },
      {
        name: "Sum correct",
        description: "The sum is correct for [1,2,3] => 6",
      },
    ],
  },
  {
    id: 12,
    title: "Reverse a String",
    description: "Write a JavaScript function to reverse a string.",
    difficulty: "Easy",
    category: "JavaScript",
    completions: 0,
    estimatedTime: "30 minutes",
    tags: ["javascript", "string", "reverse"],
    featured: false,
    instructions: `\n# Challenge: Reverse a String\n\nWrite a function that takes a string and returns it reversed.\n\n## Requirements:\n1. Create a function named 'solution' that takes a string as input\n2. Return the reversed string\n3. Example: solution("hello") should return "olleh"\n`,
    testCases: [
      { name: "Input exists", description: "There is an input for the string" },
      { name: "Button exists", description: "There is a button to reverse" },
      {
        name: "Reverse correct",
        description: "The reversed string is correct for 'hello' => 'olleh'",
      },
    ],
  },
  {
    id: 13,
    title: "Check Even or Odd",
    description:
      "Write a JavaScript function to check if a number is even or odd.",
    difficulty: "Easy",
    category: "JavaScript",
    completions: 0,
    estimatedTime: "30 minutes",
    tags: ["javascript", "number", "even", "odd"],
    featured: false,
    instructions: `\n# Challenge: Check Even or Odd\n\nWrite a function that checks if a number is even or odd.\n\n## Requirements:\n1. Create a function named 'solution' that takes a number as input\n2. Return "even" if the number is even, and "odd" if the number is odd\n3. Example: solution(4) should return "even" and solution(5) should return "odd"\n`,
    testCases: [
      { name: "Input exists", description: "There is an input for the number" },
      { name: "Button exists", description: "There is a button to check" },
      {
        name: "Check correct",
        description: "Displays 'even' for 4 and 'odd' for 5",
      },
    ],
  },
  {
    id: 14,
    title: "Find Maximum in Array",
    description:
      "Write a JavaScript function to find the maximum value in an array.",
    difficulty: "Easy",
    category: "JavaScript",
    completions: 0,
    estimatedTime: "30 minutes",
    tags: ["javascript", "arrays", "max"],
    featured: false,
    instructions: `\n# Challenge: Find Maximum in Array\n\nWrite a function that returns the maximum value from an array of numbers.\n\n## Requirements:\n1. Create a function named 'solution' that takes an array of numbers as input\n2. Return the maximum value from the array\n3. Example: solution([1,9,3]) should return 9\n`,
    testCases: [
      { name: "Input exists", description: "There is an input for the array" },
      { name: "Button exists", description: "There is a button to find max" },
      { name: "Max correct", description: "Displays 9 for [1,9,3]" },
    ],
  },
  {
    id: 15,
    title: "Count Vowels in String",
    description:
      "Write a JavaScript function to count the number of vowels in a string.",
    difficulty: "Easy",
    category: "JavaScript",
    completions: 0,
    estimatedTime: "30 minutes",
    tags: ["javascript", "string", "vowels"],
    featured: false,
    instructions: `\n# Challenge: Count Vowels in String\n\nWrite a function that counts the number of vowels in a string.\n\n## Requirements:\n1. Create a function named 'solution' that takes a string as input\n2. Return the number of vowels (a, e, i, o, u) in the string\n3. Example: solution("hello") should return 2\n`,
    testCases: [
      { name: "Input exists", description: "There is an input for the string" },
      { name: "Button exists", description: "There is a button to count" },
      { name: "Count correct", description: "Displays 2 for 'hello'" },
    ],
  },
];
